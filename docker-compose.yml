version: "3.7"

services:
    client:
        build: 
            context: ./client/web/app/
            dockerfile: Dockerfile.dev
        restart: always
        volumes: 
            - ./client/web/app:/app
        command: npm run serve
        networks: 
            backend:
                ipv4_address: 172.35.10.30
        depends_on: 
            - api
    api:
        build: 
            context: ./server/api/
            dockerfile: Dockerfile
        restart: always
        volumes:
            - ./server/api:/code
        command: bash main.sh
        environment: 
            DB_NAME: clinica
            DB_USER: centroavancado
            DB_HOST: '172.25.20.15'
            DB_PASSWORD: abda143501.com
        networks: 
            db:
                ipv4_address: 172.25.20.10
            backend:
                ipv4_address: 172.35.10.10
        depends_on: 
            - db
            - proxy
            
    db:
        image: postgres
        restart: always
        environment: 
            POSTGRES_DB: clinica
            POSTGRES_USER: centroavancado
            POSTGRES_PASSWORD: abda143501.com
        networks:
            db:
                ipv4_address: 172.25.20.15

    proxy:
        image: nginx
        restart: always
        volumes: 
            - ./server/proxy/nginx/conf.d:/etc/nginx/conf.d
            # - ./server/proxy/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./server/proxy/nginx/logs:/etc/nginx/logs
        ports:
            - 80:80
            - 443:443
        # command: [nginx-debug, '-g', 'daemon off;']
        environment:
            NGINX_PORT: 80      
        networks: 
            - backend
        ports: 
            - 80:80
            - 443:443

networks: 
    backend:
        driver: bridge
        ipam:
            config: 
                - subnet: 172.35.10.1/16
    db:
        driver: bridge
        ipam:
            config: 
                - subnet: 172.25.20.1/16
